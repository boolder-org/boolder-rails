- add_breadcrumb "Fontainebleau", admin_areas_path
- add_breadcrumb @area.name, nil, class: "active"


- if @area.published
  div class="mb-4"

    - if @missing_grade.any?
      = warning_box do 
        span class="font-bold" Grade missing:
        - @missing_grade.each do |problem|
          span class="ml-1"= link_to "##{problem.id}", admin_problem_path(problem)

div class="grid grid-cols-12 gap-4"
  div class="col-span-9 border-b border-gray-200"
    nav class="-mb-px flex space-x-8" aria-label="Tabs"
      - @circuit_tabs.each do |id, name|
        - if params[:circuit_id] == id.to_s
          = link_to name, admin_area_problems_path(circuit_id: id), class: "border-green-500 text-green-600 whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm", aria: {current: "page"}
        - else  
          = link_to name, admin_area_problems_path(circuit_id: id), class: "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm" 
  div class="col-span-3 flex justify-end"
    - items = []
    - items << { text: "New problem", link: new_admin_problem_path(area_id: @area.id) }
    - items << { text: "Edit area", link: edit_admin_area_path(@area) }
    - if params[:circuit_id].to_i > 0
      - items << { text: "Edit circuit", link: edit_admin_circuit_path(id: params[:circuit_id]) }
    - items << { text: "Map edit", link: geojson_io_url(@area), target: "_blank" }
    - items << { text: "Map download", link: geojson_source_url(@area, download: true) }
    - items << { text: "Map import", link: new_admin_import_path }
    = render "shared/dropdown_menu", items: items    

div class="flex flex-col my-6"
  div class="-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8"
    div class="py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8"
      div class="shadow overflow-hidden border-b border-gray-200 sm:rounded-lg"
        table class="min-w-full divide-y divide-gray-200"
          thead class="bg-gray-50"
            tr
              th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider" Id
              th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider" Name
              th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider" Grade
              th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider" Steepness
              th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider" Ascents
              th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider" Featured
              th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider" 
          tbody class="bg-white divide-y divide-gray-200"
            - @problems.each do |problem|
              tr class="place-content-start align-top h-16"
                td class="px-6 py-2 whitespace-nowrap w-1/12"
                  span class="text-sm text-gray-500"= link_to(problem.id, edit_admin_problem_path(problem), id: problem.id)
                td class="px-6 py-2 whitespace-nowrap w-2/12"
                  div class="text-sm text-gray-900 shrink max-w-16"
                    = problem_circle_view(problem)
                    span class="ml-2"= link_to problem.name_with_fallback&.truncate(50), edit_admin_problem_path(problem)
                td class="px-6 py-2 whitespace-nowrap w-1/12"
                  span class="ml-1 text-gray-500"= problem.grade
                td class="px-6 py-2 whitespace-nowrap w-1/12"
                  div class="text-sm text-gray-500"
                    = problem.steepness
                  / div class="text-sm text-gray-500"
                  /   = "sit_start" if problem.sit_start
                td class="px-6 py-2 whitespace-nowrap w-1/12"
                  span class="text-sm text-gray-500"
                    = problem.ascents
                td class="px-6 py-2 whitespace-nowrap w-1/12"
                  - if problem.featured
                    span class="text-red-400"
                      = render 'svg/heart', width: 24, height: 24
                td class="px-6 py-0 whitespace-nowrap w-6/12"
                  - if problem.location.nil?
                    span class="my-4 inline-flex items-center rounded-full bg-yellow-50 px-2 py-1 text-xs font-medium text-yellow-800 ring-1 ring-inset ring-yellow-600/20" location missing
                  - if problem.contribution_requests.any?
                    span class="my-4 ml-1 inline-flex items-center rounded-full bg-blue-50 px-2 py-1 text-xs font-medium text-blue-800 ring-1 ring-inset ring-blue-600/20" contrib request
                  

p= "#{@problems.count} results"

div style="margin-bottom: 400px"
