- add_breadcrumb "Fontainebleau", admin_areas_path
- add_breadcrumb @problem.area.name, admin_area_problems_path(area_slug: @problem.area.slug, circuit_id: @problem.circuit&.id)
- add_breadcrumb "Problem ##{@problem.id}", nil, class: "active"

- content_for :options do
  div class="flex items-center"
    - items = []
    - items << { text: "See on bleau.info", link: bleau_info_url(@problem), target: "_blank" } if @problem.bleau_info_id.present?
    - items << { text: "See on boolder.com (map)", link: map_path(@problem.area, pid: @problem.id), target: "_blank" }
    - items << { text: "See on boolder.com", link: problem_friendly_path(@problem), target: "_blank" }
    - items << { text: "Request new contributions", link: new_admin_contribution_request_path(problem_id: @problem.id) }
    = render 'shared/dot_menu', items: items

div class="mb-3 md:grid md:grid-cols-4 md:gap-6"
  div class="md:col-span-2"
    div class="flex justify-between"
      / - if @problem.featured
      /   span class="text-red-400 mr-1"
      /     = render 'svg/heart', width: 24, height: 24
      div class="flex items-center"
        span class="mr-2"= problem_circle_view(@problem)
        h1 class="text-2xl font-bold"= @problem.name_with_fallback
        span class="ml-2 text-gray-400 text-2xl font-bold"= @problem.grade
    div class="my-1"
      
      span class="text-gray-400 mr-1"
        span class="mr-2"
          = "#{@problem.ascents.to_i} ascents"
        - if @problem.location.nil? || !@problem.has_line
          / span class="text-gray-400 mr-2" •
          - if @problem.location.nil?
            span class="mr-1 inline-flex items-center rounded-full bg-yellow-50 px-2 py-1 text-xs font-medium text-yellow-800 ring-1 ring-inset ring-yellow-600/20" location 
          - if !@problem.has_line
            span class="mr-1 inline-flex items-center rounded-full bg-yellow-50 px-2 py-1 text-xs font-medium text-yellow-800 ring-1 ring-inset ring-yellow-600/20" line
          / span class="text-gray-400 mr-2" missing

    - if @problem.circuit_letter.blank? && (@problem.previous || @problem.next)
      div class="px-4 sm:px-0 py-2 flex justify-between items-center"
        div
          - if previous = @problem.previous
            = link_to [:admin, previous] do
              div class="flex items-center space-x-2 text-green-600"
                svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor"
                  path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16l-4-4m0 0l4-4m-4 4h18"
                divt= t('views.pagination.previous').html_safe
        div
          - if nexxt = @problem.next
            = link_to [:admin, nexxt] do
              div class="flex items-center space-x-2 text-green-600"
                divt= t('views.pagination.next').html_safe
                svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor"
                  path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"
  
  div class="md:col-span-2"


div class="mt-10 sm:mt-0"
  div class="md:grid md:grid-cols-4 md:gap-6"
    div class="mt-5 md:mt-0 md:col-span-2"
      = form_with model: [:admin, @problem] do |form|
        / div class="shadow overflow-hidden sm:rounded-md"
        /   div class="px-4 py-5 bg-white sm:p-6"
        /     div class="grid grid-cols-6 gap-6"
        /         = render "form", form: form

        /   div class="px-4 py-3 bg-gray-50 flex justify-between sm:px-6"
        /     div
        /     button type="submit" class="btn" Update

        

        div class="px-4 sm:px-0"
          - if @problem.lines.published.none?
            = link_to new_admin_line_path(problem_id: @problem.id) do 
              button type="button" class="relative block w-full rounded-lg border-2 border-dashed border-gray-300 p-12 h-64 text-center hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2"
                svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="mx-auto h-12 w-12 text-gray-400"
                  path stroke-linecap="round" stroke-linejoin="round" d="m2.25 15.75 5.159-5.159a2.25 2.25 0 0 1 3.182 0l5.159 5.159m-1.5-1.5 1.409-1.409a2.25 2.25 0 0 1 3.182 0l2.909 2.909m-18 3.75h16.5a1.5 1.5 0 0 0 1.5-1.5V6a1.5 1.5 0 0 0-1.5-1.5H3.75A1.5 1.5 0 0 0 2.25 6v12a1.5 1.5 0 0 0 1.5 1.5Zm10.5-11.25h.008v.008h-.008V8.25Zm.375 0a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0Z"
                span class="mt-2 block text-sm font-semibold text-gray-900" Add a line

        - @problem.lines.published.each do |line|
          = link_to edit_admin_line_path(line) do
            = render 'shared/topo_with_line', line: line, scope: :admin
        - @problem.lines.unpublished.each do |line|
          = link_to edit_admin_line_path(line) do
            div class="text-right text-yellow-500 mt-2"= "line ##{line.id} (unpublished)"
        - unless @problem.lines.none?
          p class="my-4"
            div class="text-right"= link_to "Add another line", new_admin_line_path(problem_id: @problem.id), class: "text-green-600 font-medium"

        

    div class="md:col-span-2"

      

      - if @problem.variants.any?
        - parent = @problem.parent || @problem
        h2 class="mb-4 text-xl font-semibold" Related
        div class="mb-8 shadow overflow-hidden sm:rounded-md"
          div class="px-4 py-5 bg-white sm:p-6"
            p class="" 
              div class="#{"font-bold" if parent.id == @problem.id}"= link_to [parent.name_with_fallback, parent.grade].compact.join(" - "), edit_admin_problem_path(parent)
            p class="" 
              - parent.children.sort_by(&:grade).reverse.each do |child|
                div class="flex ml-2"
                  span ↳
                  div class="ml-2 #{"font-bold" if child.id == @problem.id}"= link_to [child.name_with_fallback, child.grade].compact.join(" - "), edit_admin_problem_path(child)

      - if @problem.contributions.any? || @problem.contribution_requests.open.any?
        h2 class="mb-4 text-xl font-semibold" Contributions
        div class="mb-8 shadow overflow-hidden sm:rounded-md"
          div class="px-4 py-5 bg-white sm:p-6"
            
            - if @problem.contribution_requests.open.any?
              div class="mb-8"
                - if request = @problem.contribution_requests.open.order(:id).last
                  = render "contribution_banner", contribution_request: request

            ul class=""
              - @problem.contributions.each do |contribution|
                li= link_to edit_admin_contribution_path(contribution) do
                  span class="mr-1 inline-flex items-center rounded-full bg-blue-50 px-2 py-1 text-xs font-medium text-blue-800 ring-1 ring-inset ring-blue-600/20"= contribution.state
                  span= "Contrib ##{contribution.id}"
