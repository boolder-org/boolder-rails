- if (1..8).map(&:to_s).include?(params[:level])
  - set_meta_tags title: t("views.problems.index.metas.title_level", level: params[:level], area: @area.name)
- elsif params[:circuit_id].present? && circuit = Circuit.find(params[:circuit_id])
  - set_meta_tags title: t("views.problems.index.metas.title_circuit", circuit: circuit.name, area: @area.name)
- elsif params[:featured].present?
  - set_meta_tags title: t("views.problems.index.metas.title_featured", area: @area.name)
- else 
  - set_meta_tags title: t("views.problems.index.metas.title", area: @area.name)

- set_meta_tags description: t("views.problems.index.metas.description", area: @area.name)

- set_meta_tags og: { type: "website", image: image_url("areas/cover-area-#{@area.id}.jpg") }

- set_meta_tags canonical: area_problems_url(@area)

= render "areas/show/header", area: @area, selected: 1

div class="max-w-7xl mx-auto mb-8 px-4 sm:px-6 lg:px-8"
    
  div class="md:grid md:grid-cols-4 md:gap-5"
    div class="col-span-2"

      div class="space-y-12"
        - off_circuit_problems = @circuits.delete(nil)
        - @circuits.each do |circuit, problems|
          div
            h3 class="text-xl font-bold mb-2 px-2"
              | Circuit 
              = circuit&.name
            ul role="list"
              - problems.sort_by{|p| p.enumerable_circuit_number }.each do |problem|
                - cache [problem, I18n.locale]
                  = render problem
        div
          h3 class="text-xl font-bold mb-2 px-2"
            | Hors circuit
          ul role="list"
            - off_circuit_problems.each do |problem|
              - cache [problem, I18n.locale]
                = render problem