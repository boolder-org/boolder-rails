- if (1..8).map(&:to_s).include?(params[:level])
  - set_meta_tags title: t("meta_tags.problems.index.title_level", level: params[:level], area: @area.name)
- elsif params[:circuit_id].present? && circuit = Circuit.find(params[:circuit_id])
  - set_meta_tags title: t("meta_tags.problems.index.title_circuit", circuit: circuit.name, area: @area.name)
- elsif params[:featured].present?
  - set_meta_tags title: t("meta_tags.problems.index.title_featured", area: @area.name)
- else 
  - set_meta_tags title: t("meta_tags.problems.index.title", area: @area.name)


= render "areas/show/header", area: @area, selected: 1

div class="max-w-7xl mx-auto mb-8 px-4 sm:px-6 lg:px-8"
    
  div class="md:grid md:grid-cols-4 md:gap-5"
    div class="col-span-1 mb-8"
      = render "filters"

    div class="col-span-3"
      div class="max-w-lg mx-auto grid gap-5 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3 sm:max-w-none"
        / FIXME: sort circuit_number via SQL instead of ruby
        / eg. https://stackoverflow.com/questions/8502505/order-varchar-string-as-numeric
        - collection = params[:circuit_id].present? ? @problems.sort_by{|p| p.enumerable_circuit_number } : @problems
        = render partial: "problem", collection: collection, cached: true
      - unless params[:circuit_id].present? 
        div class="mt-8"
          = paginate collection