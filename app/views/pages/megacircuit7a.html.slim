/ - set_meta_tags title: t("views.areas.show.metas.title", area: @area.name)
/ - set_meta_tags description: t("views.areas.show.metas.description", area: @area.name) 

/ - if @area.cover.persisted?
/   - set_meta_tags og: { type: "website", image: url_for(@area.cover.variant(:medium)) }

div class="max-w-7xl mx-auto sm:px-6 lg:px-8 mb-8"
  div class="lg:grid lg:grid-cols-1 lg:gap-16"
    div class="col-span-1"

      div class=""
        div class="flex items-center space-x-2 text-2xl font-bold mt-4 mb-4 pt-4"
          h1 class="px-4 sm:px-0 text-4xl font-bold" MÃ©ga circuit 100 7a
        - i = 0
        - @areas.each do |area, problems|
          h2 class="px-4 sm:px-0 text-2xl font-bold my-4"= area
          - if params[:tab] == "photo"
            ul role="list" class="px-4 sm:px-0 mb-8 grid grid-cols-2 gap-x-4 gap-y-8 sm:grid-cols-3 sm:gap-x-6 lg:grid-cols-4 xl:gap-x-8"
              - problems.each do |problem|
                - i = i + 1
                li class="relative"
                  div class="group aspect-h-3 aspect-w-4 block w-full overflow-hidden rounded-lg bg-gray-100 focus-within:ring-2    focus-within:ring-green-500 focus-within:ring-offset-2 focus-within:ring-offset-gray-100"
                    - if line = problem.lines.published.first
                      / = render 'shared/topo_with_line', line: line, scope: :front
                      = image_tag(line.topo.photo.variant(:medium), class: "pointer-events-none object-cover    group-hover:opacity-75", data: {'topo-line-target': 'image'})
                    = link_to problem_friendly_path(problem), class: "absolute inset-0 focus:outline-none" do
                      span class="sr-only"= "View details for #{problem.name_with_fallback}"
                  p class="pointer-events-none mt-2 block truncate text-sm font-medium text-gray-900"= "#{i}. #{problem.  name_with_fallback}"
                  / p class="pointer-events-none block text-sm font-medium text-gray-500" 3.9 MB
          - else
            ul role="list"
              - problems.each do |problem|
                li class="px-4 sm:-mx-2 sm:px-2 hover:bg-gray-50 rounded-lg"
                  = link_to problem_friendly_path(problem) do
                    div class="flex justify-between py-2"
                        div
                          = problem_circle_view(problem)
                          span class="ml-2"= problem.name_with_fallback
                        div
                          div class="flex space-x-2"
                            div class="text-gray-500"
                              = problem.grade
                            